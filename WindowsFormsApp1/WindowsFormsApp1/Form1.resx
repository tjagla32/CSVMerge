<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABEASwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8
        y6KKK+8PzNbBRRmigAooooAKKMZNGaACigc0HjPtQAUUdKKACjvXRfDL4Va98YPFEWj+H9PmvryTkhR8
        sS/3mPQD619ofB3/AIJUaHo9jHc+NNTn1C7Iy9tat5UCexbqf0rqw+Dq1vgWnc8XNOIMFl+mIl73Zav7
        unzsfBtH+elfpnN+wr8GdTh+wR6barcHjdFfHzh/491/CvnL9rX/AIJz3fwj0W48Q+E5rjVtFtRvubaQ
        bp7Ze7Aj7yjv3FdFbK61OPPo15Hm4DjLAYmqqLvBvbmVk/nd/ifLNFFGK80+sCiigc0AFFHWjNABRRmi
        gAoozQeKACig8UUAFFFGaACijNFABRRmigAooHJooAK9K+E+v30PhqREvLpVWchVEzAAbU4HNea133wr
        /wCRem/6+G/9BWpkXT3OBoorV8DeELv4geNNJ0KxjaW81m8isoEXqzyOEH6mq6ER10P2I/4Iu/8ABFP4
        T/tIfsW6f47+KXh281TVvEV7NNYlb6W2WO0U7F4UgHLBjmue/wCC5v8AwRv+GX7J/wCylYePvhX4fvNL
        l0rVI4NWD3ktwr28o2q3zk4w+3n3r7z/AGv/ABpD/wAE1f8AgkVqi6RKtne+EvC0Gj6awO0m7dFiVh77
        yW/A1PoElp/wU2/4JAQrIy3Nz448G7GP3il6kePru81K+ZjjKvtfbXfLzbXPsXgaPsfq6iufl363/wCH
        P5s/gd8Hda/aB+Lvh3wX4fh8/WPEl9HY2qn7oZzjcfZRkn2Br98/2dP+Ddr4AfA/4d20vj61k8Xa0sKv
        fX1/dmC1jfHzBEBChc8ZJr8sf+CFPh59J/4Kz/D/AE+/h23Wn3V9G6OP9XKlvKp49QQa/SP/AIOkfiXr
        ngz9kDwfpelaldafaa94h2X4gkMbXCRwuyoSP4d2Dj2Fd2OqVJV40ISsmeZltGlDDzxNSPM10PWNc/4I
        cfsi+PYC1v4ZsbctnElhrLpj8mIr8hv2h/2Pvhv8Nf8AgsTpfwf0OC+u/A6+INO027hmuS8kgl2GVRIO
        f4+oNfJGlfEbxFokm+z17WrVh0MV7IuPyavV/wBgfX73xH/wUE+FV/qN1cX97ceK7Bpp55TJLIfNXlmJ
        yfxranhatJSlKbasznrYyjXcYxpqLuvuP3bu/wDg31/ZT063M1x4NureMdWk1qdVB+pbFZOs/wDBvR+y
        t4z0qa10vRdSs7grxcWWtvK8We+GLD8xUn/ByJfXOl/8EtPEk1rcT2sw1jTQJIZDGwHnjuMGvyv/AODd
        74weKtG/4KYeENHTxBqz6V4htry3vrWW6eSKdVt3kXIYkZDIOa8uhHEVKLrKo9Oh7WIlhqdeNB0171tb
        Lrocf/wVw/4JZal/wTT+LGn29vqE2ueDfEqvJpN/Im2VGUjfDIBxvGQcjqPSvmH4bfD3Uvip4307QdJi
        Mt7qUwiTjIQd2PsBya/bP/g68iA/Zs+GLYG7/hJJQDjnH2Z+P0Ffn5/wS58K+HfDVjq/jDWNS0211CVz
        Y2STzorRoOXbBPckDPtX0eSqWKjHnfr8j4ni7FRyynUq0ld6WXm/0W/oe+eCvBfgv9gv4GyXV20MbQoG
        vLogeffTEfcXv14A6Yr4n/aG/bw8ZfG7Up4bW9n0HQtx8q0tXKO69i7dSfYcCtD/AIKDftIyfGr4sS6T
        p915nhzw+5htwjZSeXGHk9/QH0z618/mvZx2Nd/Y0dIrTTqfI8N8PpR+v49c9aeuutr+Xf8ALYvWPiXU
        dO1Bbu3v7yG6VtwlWZg+frmv0W/4J7/tF3X7QPww1DSPEEi3mq6LiGWRwCbqBwdrMPXgg/hX5t19af8A
        BKXXLHwz418WXepalaWMDWUUSieVY97byeMnnABrPK60o10r6Pc6OMcDTq5bOpy+9GzTS13St9x47+0J
        8IYfhv8AtR6l4ZjjYWMmpx+Qg4/dSspCj6BsfhX7sal/wbw/s6+IPgzMuneFdQsfEN5pBNtd/wBqTN5N
        y0XyvtLbT8+Dg8V+Nf7X2r2Pjb9vXSTptxBd28lzptuZIWDqW8xQeR9a/qP08x2Wm28ZZVVY1Rc8Z4wB
        XzPEFSVGty0nbV7eqPvOC4LE4CNTERu3GN797H8efxG8C3/wy8e614d1SFrfUtEvZbG4jbgq8bFT/Kv0
        F/4N/v8AgmF4T/bk8R+M/EfxG0ibVfCOgxR2VpCJnhWa7c7icqQTtQdPVqz/APg4+/ZLb4G/tx/8Jdpt
        m0ej/Em3F8pRML9sTCTLx3Pyt/wKv12/4I3fswRfsifsB+CdHvI0tdY1yEavqRb5Wa4uMMFPuFKr+FRj
        MZ/sqnDeX9M7cBl/+2ShNaR/pH5Y/wDBwl/wTu+F37D2lfDm6+G/h99DGuy3UV7m5ebzSioV+8TjGT0r
        4I/ZX+CV1+0d+0b4M8D2ccjyeJdWgsm2DJWNnG8+2E3H8K/X/wD4OyNN3fBj4R3m3ldcu4SfQG3B/pXz
        X/wbFfs4H4mftoar46urcvYeAdMZonK/L9quMxp7ZCBz+VPD4iUcF7STu1f8ycXhYyzD2MVZO35an6SW
        v/BvH+y3Hbxo/grUHkVQGb+2LjLY7/er8PP+Cq/7Jln+xZ+294w8E6TbyW/h+GRL3SEkYuRayqGUbjyc
        HcM+1ft38e/+Chv/AArr/gtF8K/g+l8qaPq3h+5i1GIvhftdwd9uD7gRH/vuvkr/AIOsP2ddl38O/ila
        QcMsug6hIo7/AOthJP8A32K5cBiKqrKNVtqS0O7M8NRlQlKjFJxetv68z5S/4Iof8EqdP/4KO/ETXr7x
        RqF5Y+C/CIiF2lqds17NJkrGG6KMKST1r9XNV/4I7/sZfCaGHQ9c0Pw/Z3txGNg1LWSl1KP7w3ODz7DF
        fOv/AAae+JLFvhl8V9J86L+0ItStLoxZxIYzGy7semQR+NcD/wAFyv8AglD8dvjb+2FrPxK8F6NdeLvD
        up2kAiitLkefp5jjCsgjJBwSC3y+pqsRUnPFOk58qRGFpQpYONaNPnb3/rU73/gpZ/wR/wD2Yfgn+xX4
        8+IXguK4t9Y0LTzPp4ttaNxC8xdQuVJORzXpf7Nv/BEz9lDx9+z94L1rWNJDatq2i2t1dt/wkDoTK8Ss
        /wAu7jknivw5+Knw5+I/waml0nxjpXizw/5p2Pbaik0UchHbDfKelcvD4v1aNI411TUljXAVVuXVQPpm
        uv6nVcElVfr/AEzheYUVUu6K2287+h/RF/w4h/Y9PTSF/wDCif8A+Lrl/jj/AMEQ/wBkvwd8FvFmraZp
        IXUtM0e6urVv+EgdtsqRMyHG7nkDiuk1v/gmV8FfFX/BPu38WXHg2OPxBF4DTUlvYL64if7QLESb8B8E
        7ueRX87/APwl+rSxFW1TUmVhgg3UhBBGPX8K48LTq1ruNV6P+up6GOrUcOlzUY+8tLf8MfvJ+wZ/wQ7/
        AGc/jX+xv8O/FviTwhfXOta9okN5ezDVJ4w8jDJbAbA/CvRD/wAEKv2OlbB0WHOcY/4SOT/4uvZf+Ca2
        nSaj/wAEw/hjbW/zTT+EI4o+erNGQP1Ir8ZvEn/BBH9q7UPEupXFvpsfk3F1LIh/t4AlWckZ59DWFOc6
        lSalV5bPv/wToqQhSpQcKKlddvTyPXv+CmH/AATY+A/wK/aw/Z28LeBNKC6P478QpY65DHq0lwZ4WniX
        aDuJTIZuRX0N+3d/wQz/AGfvhb8G9LvvCnha603Vb7xPpGnNO+qTOogmu40mGGbAzGWGe2a/N7wH+xx8
        Sv2L/wDgpJ8DvD/xMiEGpah4j069tVF79qHl/a0UnOTjkdK/X/8A4OL55LT/AIJW+MpIZJIZI9Q01ldG
        Ksp+1J0I6Gt606kJ0oRm3fr31OfD06U4Vqk6aVunbQzLr/g3t/ZR8R20lrY6TqEM8ikK9vrrvIvvjJ/l
        X5pf8FkP+CKa/wDBPLQNN8a+EdYvtd8EaldCymS8QfadOlYEpuZQAytgjOAcivnr/gl98RPGem/t8/CV
        dK17xB5l14lsobiNLuVxLA0qiUMuSCuwtnIr9s/+DkwKf+CYWvEhcjWdPIz1B84dKtSr4fEQhKfMpEOO
        HxOGnUjBRcex/OXXffCv/kXpv+vhv/QVrga774V/8i9N/wBfDf8AoK17Uj56n8RwNfan/BAn9nE/tB/8
        FGvCs09v5+l+DI5NeuyRlQYhtiB+sjL+Ir4rNft5/wAGtnwd0rwL8GPHHxF1S5sLa/8AEl+mlWZmmRHF
        vCNzkZOcGRv/AB2uXHVfZ4eTXp9515XR9piIp7b/AHH1d/wWX/YL8e/8FEf2fNF8C+C9f0XQbeHVV1DU
        21AyBZ1RT5agICfvMSc+gqn/AMEcPgF4o/Yh+GGtfAvxprGl61q3hl11mxmsWcxGyu2cADcAeJI5BXwJ
        /wAFWv8AguX8XvhJ+3D4s8J/DHxRZWPhXw2YrFQtpHOJZwgMr7iP7zY/4DVT/gj7/wAFZ/H/AMcv+Cl2
        h/8AC0Netb6PxJok2gRSmFLdUKsZ4s4wPvBhk/3jXjfVK/1bW3Lv5nv/AF7DfW1a/Ne3l2/M6L4efs4H
        9mj/AIOZrHT4bfyNL8QXN1rtgAMKY7i1lZgPo+8fhXr3/B1tC7fsu/DmQK3lr4kdWbHCkwPj866D/gtl
        4r0/9mj9ov4D/tJaPLZ6hJ4M1dtI1iK3lVpJbSZW7A84BkA+tfVPij/hQ/8AwVf/AGb7eyv9Q0XxZ4W1
        No7tEjuxHcWUwHB67kcZIP41MqzUqWIktErP5XKjh04VsLFpNu69HY/G7/g3B/Z88GftEftXeLdM8beG
        9K8TabZ+HjPFb38IlSOTzkG4D1xmvZP+Clv7PXgv9nr/AILN/s76T4J8M6X4a028n0+4mt7CIRJI/wBs
        I3EeuBiv0a/ZJ/4J1/Af9gDxhqPiLwOIdJ1LUrX7FcS3mq+YDFuDYwxwOR1r8/8A/grh8QdB8af8FrP2
        dLrRta0vUobOSxjuJbe4SRIG+2k4Yg4BxzzW8cR7bEuUb2s/yOeWE9hhFCdubmX5o+p/+DlL/lFb4kwP
        +YxpuP8Av/X5G/8ABv8AS7f+Cqvwxwpbd9uBI7f6HNX7X/8ABXTwn4c/aF/Zk0Hwbe6lp9xp+veNNEtr
        1Eu0XdB9pBkGc8fKDz2qT9mv/gn/APsw/sN+MpvGnhGHw7pWrW8DxjULvV1ma2jI+bbubC5Hcdqww+KV
        PDSptO8r/kdOKwcquLjVTVo2v958s/8AB18c/s0/DL/sZZf/AEmevlX4ff8ABML4Z3X7Eln4+1RdYk1h
        /DTazJ5V2VjMnkmQALjoOKt/8HFf/BR/wj+1v488M+A/Al9DrWh+C5Zbm81KE7obi6cbdsf95VXPzDjJ
        Ne4/8E/PEln+0N/wT10nR/PUyR6XNoN2oIJiKhoxn/gJU+9fiHjznmcZHkeAxuX1p0Ye3SqODafK03Z2
        6aP52Pr+B8FgMyzXE0MRCNR+z926uuZW1X3n4vN1OPWkrpPi58MdU+DfxG1bw3rNtNa32l3LwsHUjeoJ
        CuPUEYIPvXOKjO20LlicAepr+jsLiqWIoxxFCSlCSTTWqaaumn2aPyStRnSqOlUVpJ2a6poTr717d8Of
        2f8ASpvAsOo659ojuJUMzYkMflpjIyP89a5vSv2cvFmhfD9fHNzpLHS7G4R2t5lIlljzy+3qF+tbnxn+
        OtrrXg230/SZMNqEQa4I48lf7n1OPyr4nPsyxWPqUsHk1TTnanOD+FpaptbaO/nsfv8A4V5Tw9k2Fx2d
        8YUlKdOknRoVI/xOd2Uop76pR/upuT0sc/8As2aXB4g/au8D2dqrfZ7jxLZpErHJ2/aExk96/o0/4LL/
        ALQ2qfspfsYWvjzSJGjvPD/ijRp9qtjzo/tKiRD7Mm4fjX88v/BPu2S+/bh+E8UjKscninTwzO2FA89O
        Sa/br/g5P8aabff8E0r6ztdQsbia41/Tx5cU6sx2yFugPtX0WMpr21Km9V/wx+QYKu5UcRXSUW23ZaJb
        uyXRLoj279qv9kzwj/wVS+Cvwp8QC4hbT9P1Ww8T202N3nWxCtLDn/aXAPutcT/wUF/bGX4d/tu/s2/B
        nRbhYpvEfiSHUNWjRseXaRgrDGQOzPzj/Yr82f8AgnX/AMHCd5+xN+y7pvw71jwbceLG0SeT7Bd/bRF5
        cDHcIyCCflJbHsa8z+FP7a+o/tn/APBa/wCHnxQ1qP8AsyK98UWSW1q0wZLC3T5FTccD1JPqaxhl9SMm
        qnwxTsazzOjKKdP45ONz9AP+Dq/SftX7Jfw9uudtn4mcZ9N1u4r0X/g3D/Z0T4H/APBPuHxTewrDf+Pr
        2XVnkcYP2ZP3cWfbCsce9Zv/AAcXeGbb43fso+B9B0m+sbq91DxvYWKLHOrFDNuj3HB6DPWvav2ufiz4
        d/YR/wCCXniCHRdS0/zPCvhRdI06OGdCzzNEIEIAPUs2a5+dvCwords6vZpYydeW0Yr+vuPiTxj/AMEi
        fjH+2T+23D+054f8aeFNP0/Utch1fRra5efz47S3kCxocKRyqfT5q+4f+CyX7Okn7Sv/AATm8eaOIVuN
        W0exGtWQRSSZ7b5yF+qhx+Nfh38Pv+C6P7R3ww8D6V4d0fxfZ2+l6NapaWsZ06JiiIMDJxyfev2m/wCC
        Q37cX/Dcf7Clnq3jrV9NuPEqTXWk6yJGSHz+ThiuehjYD8K2xVGvS5akrWi9LGODxGGr89KF7yWtz+d/
        9mX9q3x5+x78Ro/FHw/1650HVlTypSnzR3EeclJEPDLnsa/SX9nT/g6g8XaLdWdn8SvBGm6zZghJ77SZ
        Dbzgd22HKk+wIrrf+CeX/BPT9nPR/ip8cfCvxjm8H6hqdj4uex0SzvtTWGZLNV3pJHtcHa3mgZH9yvpe
        8/4IRfsh+JNShv7OzSGGFxIYbbXi0Mg64OWPB+tdWKxWFnK1WDfmceDweNhG9GaXkexf8FCfhr4P/bC/
        4JweLNQ1DTobqyvfC7eINLnkiHnWriDz4nU9QegOPWv5cIzkr+Ff0m/8FVv29/hX+yf+xJ4o8I6f4g0e
        417UtDfQdF0WyuFmkQNF5a7gpJVFXufSv5sYxtK+36VeTqSpyvtfQzz6UXUjbe2p/VVb/wDKLSP/ALJq
        v/puFfypx/dX6Cv6moPGWkD/AIJfRw/2pp/nf8K3VNn2lN27+zsYxnrX8ssYwi/QUsp/5eeo892pen+R
        /VH/AMEz9TbRv+CZPwvvI1DNa+EoplVujFYycfpX5ea7/wAHTfxN0fX7+zHw/wDCbLa3EkKkzS5IVioP
        44r9KP8Agnf4w0mz/wCCXXw7hm1PT45V8GoCjXCBgfKbgjNfLH7If/BFL9m34o/s4+FfEnjZftHinXbV
        r7UHXWvKHmPIzfdz8vGK8+l7CM5yrRvrp+J6leOInTpxw8raa/h6nwVff8FEfEH/AAUd/wCCn3wJ8U+I
        dF03Q7jR9f02wjisnZkdftatk7u+TX78ftZ638MtB+CWoXPxdbRY/Ayywi8OrJutd5cCPcO53Yx71+SH
        7cP7C3we/Yd/bo/Zhl+GIW3j1rxZbnUXfUftKgR3MO0nn5epr7G/4OGvFGl6p/wS48ZQ22o2NzM2oadi
        OOdWY/6SnYH8a0xChUnSVO6i9PxMsI6lGFZ1bOS19dD2X9jfwX+zP8RJpvF3wY0fwDfy6TN9mk1DSbVD
        JayEZxkjKnHevzi/4Ogf21tYufE2kfA230m4sdHhEOu3d/Kfl1FsMERP9lTnOe4rwr/g3L/bQX9nP9sh
        vB2rXot/DnxGiFmTK+2OK8T5oWOeBu+Zc+4r7U/4OY/2bNJ+Mv7NWkfErRbrT7nXPAc/lXYimRpJbKYg
        HockI+G/E1UaKo4yMZ6ro3/XcipiHiMBKVJWfVL+ux+D9d98K/8AkXpv+vhv/QVrga774V/8i9N/18N/
        6CtfQSPmKfxHA1qaZ421nRbNbez1bUrW3UkiKG5eNAT14BxWXRT6GcW1sPu7qW+uZJppJJppGLO7tuZy
        epJPJp1lezaZeR3FvNLbzRHckkbFHQ+oI5FRUUwNLVfGWr67a+TfapqN5CWDeXNcvImR3wTineHfGuse
        EJmk0nVtS02RurWty8JP/fJFZdFLlWw+Z3ub2tfFDxL4kUrqHiDW75T1E99JJn8zWNHfTQ3STrNKs0ZD
        JIHO5SOhB61FRTSS2DmZq33jvXNUiEdzrGqXCBg+2S6dlyOhwT1HrVSfXr65iKSX15IrdQ0zEH8zVWii
        yDmYdq+kv+CdX7el1+xr47nt9QjmvfCOtOv26BDl4HHAlQeuOCO4r5to6V4fEnDuAz3LquVZnDnpVFZr
        r3TT6NPVPud+V5picuxUMZhJcs4vT9U+6ezR+v8A+1vr3wF/aU/Zq8QePJv+Ef8AEF9pOlSTWs0cojvE
        k24RGwd3DEcHPSvlD9j34ceBPAfwb0/xR4nGjR6reM9ws146loo84QBSfQZ6d6+Mo7iSJHVZHVJOGUHh
        vrSy3Uk0ao8kjInCgtkD8K/KeH/BqplGU1Mlw+Y1XRnUUlfeMEmvZr3rJNtttJJ6aaH6VhfFCjTzSOb1
        sBTnUjBxSdrc7afO9G20lZK91d6n15+0p/wUA0640a70HwfDHdiZGgmvZo8whTwQin71fH5OT+tFFfp3
        DPCuAyLDPD4GL11lJu7k+7/RKyPkeLuNMz4jxaxWYyXu6RilaMU+i/Vt3ZJa3c1jcxzQySQzRsHSSNir
        IR3BHIq9q3jHV9dt/JvtU1G8h3btk9y8i59cE4zWbRX0h8ndhUlrdzWNyk0EskM0ZDI6MVZD6gio6KAN
        W88da5qPl/aNY1SfynEieZdO2xh0YZPBHqOabqfjTWNbtWgvNW1O7hYgtHNcvIrHryCeeazKKXKiuZhW
        hpHi3VfD8LR2Gp6hYxu25kguHjVj6kKRzWfRTJLF7qlzqN61zcXFxNcP96WSQs7emWPNXLDx1relQNHb
        axqlvG/3kju3VW/AGsuilZDuyS6u5b6ZpJpJJpGOSzsWY/ieajoopiNY+PtcNp9n/trVjBs8vy/tkm3b
        jGMZ6Y4xWT0FFFG2wXfU1oPHmuWlmtvFrWqx28a7FjS6dUVfQAHGPaoovF+rQRrGmqagiIMKq3LgD6DN
        Z1FLlQ+Z9y5ceItQu7qGaa+vJJrc5id5mZoz1+U5yOfSp9T8a6zrVq0N5q2pXULEFo5rl5EOORwTisyi
        nZBzMktrmSyuEmhkkhljIZHRirIR0II9K0r/AMea5qdrJDc6xqlxDKMPHLdyOrj0IJxWTRRYV2Fd98K/
        +Rem/wCvhv8A0Fa4Gu++Ff8AyL03/Xw3/oK1MjSn8RxmvRrDrt6iKqqs7hVAwANx4FVKKKcdjPqFFFFM
        AooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAK774V/8i9N/wBfDf8AoK0UVMjSn8R//9k=
</value>
  </data>
</root>